	.file	"tmp0001.$$$"
gcc_compiled.:
.text
	.align 4
.globl ___bdiv
___bdiv:
	pushl %ebp
	movl %esp,%ebp
	subl $56,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 24(%ebp),%ebx
	movl 28(%ebp),%eax
	movl %eax,-4(%ebp)
	subl %ebx,%esp
	movl %esp,-12(%ebp)
	subl %eax,%esp
	movl %esp,-16(%ebp)
	shrl $1,%ebx
	shrl $1,-4(%ebp)
	movl %ebx,%eax
	subl -4(%ebp),%eax
	movl %eax,-56(%ebp)
	jmp L2
	.align 2
L5:
	movl -4(%ebp),%eax
	movl 20(%ebp),%ecx
	movw $0,-2(%ecx,%eax,2)
	decl %ebx
	decl -4(%ebp)
	jne L2
	call _abort
L2:
	movl -4(%ebp),%eax
	movl 12(%ebp),%ecx
	cmpw $0,-2(%ecx,%eax,2)
	je L5
	cmpl $1,-4(%ebp)
	jne L6
	movl 8(%ebp),%eax
	movzwl -2(%eax,%ebx,2),%esi
	movl -56(%ebp),%eax
	decl %eax
	movl %eax,-56(%ebp)
	js L40
L10:
	shll $16,%esi
	movl %esi,-48(%ebp)
	movl 8(%ebp),%ecx
	movl -56(%ebp),%eax
	movzwl (%ecx,%eax,2),%edx
	orl %edx,%esi
	movl 12(%ebp),%eax
	movzwl (%eax),%eax
	movl %eax,-48(%ebp)
	pushl %eax
	pushl %esi
	call ___udivsi3
	addl $8,%esp
	movl %eax,-48(%ebp)
	movw -48(%ebp),%di
	movl 16(%ebp),%ecx
	movl -56(%ebp),%eax
	movw %di,(%ecx,%eax,2)
	movl 12(%ebp),%eax
	movzwl (%eax),%eax
	movl %eax,-48(%ebp)
	movl %esi,%eax
	xorl %edx,%edx
	divl -48(%ebp)
	movl %edx,%esi
	decl -56(%ebp)
	jns L10
L40:
	movl 20(%ebp),%eax
	movw %si,(%eax)
	jmp L1
	.align 2
L6:
	movl $0,-36(%ebp)
	movl -4(%ebp),%eax
	movl 12(%ebp),%ecx
	movzwl -2(%ecx,%eax,2),%edx
L15:
	movl $15,%ecx
	subl -36(%ebp),%ecx
	movl $1,%eax
	sall %cl,%eax
	testl %edx,%eax
	jne L12
	incl -36(%ebp)
	cmpl $15,-36(%ebp)
	jle L15
L12:
	pushl %ebx
	pushl $0
	pushl -12(%ebp)
	pushl -36(%ebp)
	pushl 8(%ebp)
	call _bshift
	pushl -4(%ebp)
	pushl $0
	pushl -16(%ebp)
	pushl -36(%ebp)
	pushl 12(%ebp)
	call _bshift
	movl -12(%ebp),%eax
	leal -2(%eax,%ebx,2),%eax
	movl %eax,-48(%ebp)
	movl -56(%ebp),%eax
	leal -2(,%eax,2),%edx
	movl -48(%ebp),%eax
	subl %edx,%eax
	movl %eax,-20(%ebp)
	movl -20(%ebp),%eax
	addl $-2,%eax
	movl %eax,-24(%ebp)
	movl -24(%ebp),%eax
	addl $-2,%eax
	movl %eax,-28(%ebp)
	movl -4(%ebp),%eax
	movl -16(%ebp),%ecx
	leal -2(%ecx,%eax,2),%ecx
	movl %ecx,-32(%ebp)
	movl -56(%ebp),%eax
	decl %eax
	movl %eax,-56(%ebp)
	addl $40,%esp
	testl %eax,%eax
	jl L39
L35:
	movl -32(%ebp),%eax
	movw (%eax),%di
	movl -20(%ebp),%ecx
	movl -56(%ebp),%eax
	cmpw (%ecx,%eax,2),%di
	jne L19
	movl $65535,-8(%ebp)
	movl -32(%ebp),%eax
	movzwl (%eax),%eax
	movl %eax,-48(%ebp)
	movl -24(%ebp),%ecx
	movl -56(%ebp),%eax
	movzwl (%ecx,%eax,2),%edx
	movl -48(%ebp),%eax
	leal (%edx,%eax),%ecx
	movl %ecx,-52(%ebp)
	jmp L20
	.align 2
L19:
	movl -20(%ebp),%ecx
	movl -56(%ebp),%eax
	movzwl (%ecx,%eax,2),%ebx
	shll $16,%ebx
	movl -24(%ebp),%ecx
	movzwl (%ecx,%eax,2),%ecx
	movl %ecx,-48(%ebp)
	orl %ecx,%ebx
	movl -32(%ebp),%eax
	movzwl (%eax),%eax
	movl %eax,-48(%ebp)
	pushl %eax
	pushl %ebx
	call ___udivsi3
	addl $8,%esp
	movl %eax,-8(%ebp)
	movl -32(%ebp),%eax
	movzwl (%eax),%eax
	movl %eax,-48(%ebp)
	movl %ebx,%eax
	xorl %edx,%edx
	divl -48(%ebp)
	movl %edx,-52(%ebp)
L20:
	cmpl $65535,-52(%ebp)
	ja L22
	movl -32(%ebp),%eax
	movzwl -2(%eax),%esi
	movl -28(%ebp),%ecx
	movl -56(%ebp),%eax
	movzwl (%ecx,%eax,2),%ebx
L23:
	movl -8(%ebp),%edx
	imull %esi,%edx
	movl -52(%ebp),%eax
	shll $16,%eax
	orl %ebx,%eax
	cmpl %edx,%eax
	jae L22
	decl -8(%ebp)
	movl -32(%ebp),%eax
	movzwl (%eax),%eax
	movl %eax,-48(%ebp)
	movl -52(%ebp),%eax
	movl -48(%ebp),%ecx
	leal (%ecx,%eax),%ecx
	movl %ecx,-52(%ebp)
	cmpl $65535,%ecx
	jbe L23
L22:
	xorl %esi,%esi
	xorl %ebx,%ebx
	cmpl -4(%ebp),%ebx
	jae L37
	movl -12(%ebp),%ecx
	movl -56(%ebp),%eax
	leal (%ecx,%eax,2),%ecx
	movl %ecx,-40(%ebp)
L29:
	movl %ebx,%eax
	addl %eax,%eax
	movl %eax,-48(%ebp)
	movl -40(%ebp),%eax
	movl -48(%ebp),%ecx
	movzwl (%ecx,%eax),%edx
	movl -16(%ebp),%eax
	movzwl (%eax,%ebx,2),%eax
	imull -8(%ebp),%eax
	movl %eax,-52(%ebp)
	subl %eax,%edx
	leal (%edx,%esi),%esi
	movl -40(%ebp),%eax
	movw %si,(%ecx,%eax)
	cmpl $65535,%esi
	ja L27
	xorl %esi,%esi
	jmp L26
	.align 2
L27:
	movl %esi,%eax
	shrl $16,%eax
	movl %eax,%esi
	orl $-65536,%esi
L26:
	incl %ebx
	cmpl -4(%ebp),%ebx
	jb L29
L37:
	movw -8(%ebp),%di
	movl 16(%ebp),%ecx
	movl -56(%ebp),%eax
	movw %di,(%ecx,%eax,2)
	movl -20(%ebp),%ecx
	movzwl (%ecx,%eax,2),%ecx
	movl %ecx,-48(%ebp)
	leal (%ecx,%esi),%eax
	movl %eax,-48(%ebp)
	testl %eax,%eax
	jge L18
	movl 16(%ebp),%ecx
	movl -56(%ebp),%eax
	addw $65535,(%ecx,%eax,2)
	xorl %esi,%esi
	xorl %ebx,%ebx
	cmpl -4(%ebp),%ebx
	jae L18
	movl -12(%ebp),%ecx
	leal (%ecx,%eax,2),%ecx
	movl %ecx,-44(%ebp)
L34:
	movl %ebx,%eax
	addl %eax,%eax
	movl %eax,-48(%ebp)
	movl -44(%ebp),%eax
	movl -48(%ebp),%ecx
	movzwl (%ecx,%eax),%edx
	movl -16(%ebp),%eax
	movzwl (%eax,%ebx,2),%eax
	movl %eax,-52(%ebp)
	leal (%eax,%edx),%edx
	leal (%edx,%esi),%esi
	movl -44(%ebp),%eax
	movw %si,(%ecx,%eax)
	shrl $16,%esi
	incl %ebx
	cmpl -4(%ebp),%ebx
	jb L34
L18:
	decl -56(%ebp)
	jns L35
L39:
	movl -4(%ebp),%eax
	decl %eax
	movl %eax,-48(%ebp)
	pushl %eax
	movl -12(%ebp),%eax
	movzwl (%eax),%eax
	movl -36(%ebp),%ecx
	sarl %cl,%eax
	movl %eax,-48(%ebp)
	pushl %eax
	pushl 20(%ebp)
	movl $16,%eax
	subl %ecx,%eax
	movl %eax,-48(%ebp)
	pushl %eax
	movl -12(%ebp),%eax
	addl $2,%eax
	movl %eax,-48(%ebp)
	pushl %eax
	call _bshift
	movl %eax,-48(%ebp)
	movw -48(%ebp),%di
	movl -4(%ebp),%eax
	movl 20(%ebp),%ecx
	movw %di,-2(%ecx,%eax,2)
L1:
	leal -68(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	leave
	ret
	.align 4
_bshift:
	pushl %ebp
	movl %esp,%ebp
	subl $4,%esp
	pushl %edi
	pushl %esi
	pushl %ebx
	movl 12(%ebp),%esi
	movl 16(%ebp),%edi
	movw 20(%ebp),%ax
	movl 24(%ebp),%ebx
	testl %esi,%esi
	jne L43
	movl %ebx,%eax
	addl %eax,%eax
	pushl %eax
	pushl 8(%ebp)
	pushl %edi
	call _memcpy
	xorl %eax,%eax
	jmp L42
	.align 2
L43:
	movzwl %ax,%ecx
	movl %ecx,-4(%ebp)
	xorl %edx,%edx
	cmpl %edx,%ebx
	jle L48
L47:
	movl 8(%ebp),%ecx
	movzwl (%ecx,%edx,2),%eax
	movl %esi,%ecx
	shll %cl,%eax
	orl %eax,-4(%ebp)
	movw -4(%ebp),%cx
	movw %cx,(%edi,%edx,2)
	shrl $16,-4(%ebp)
	incl %edx
	cmpl %edx,%ebx
	jg L47
L48:
	movl -4(%ebp),%eax
L42:
	leal -16(%ebp),%esp
	popl %ebx
	popl %esi
	popl %edi
	leave
	ret
